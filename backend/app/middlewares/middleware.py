import time
from typing import Awaitable, Callable

from fastapi import Request, Response
from loguru_setup import LOGGER


async def log_request_info(
    request: Request, call_next: Callable[[Request], Awaitable[Response]]
) -> Response:
    """
    Middleware to log the request processing time and details.

    Args:
        request (Request): The incoming HTTP request.
        call_next (Callable): The next middleware or route handler.

    Returns:
        Response: The HTTP response generated by the route handler.
    """

    start_time = time.monotonic_ns()
    response = await call_next(request)
    process_time = time.monotonic_ns() - start_time

    rounded_time = f'{process_time / 1_000_000_000:.4f}s'
    response.headers['X-Process-Time'] = rounded_time

    LOGGER.info(
        f'Method={request.method} Path={request.url.path} '
        f'StatusCode={response.status_code} ProcessTime={rounded_time}'
    )

    return response
